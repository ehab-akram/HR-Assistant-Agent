{
  "name": "HR Assistant Policy Agent",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Add your file here",
        "formFields": {
          "values": [
            {
              "fieldLabel": "File",
              "fieldType": "file",
              "acceptFileTypes": ".txt",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "ae852f3d-5b4e-41a6-92f0-7d45d32098eb",
      "name": "On form submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -752,
        144
      ],
      "webhookId": "4e1e20d4-f759-42c8-8439-87b93f43aa7c",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "rag_collection"
        },
        "embeddingBatchSize": 1000,
        "options": {}
      },
      "id": "e2dddc92-dccb-4091-9386-0ad23c96e3e7",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        -528,
        144
      ],
      "typeVersion": 1.2,
      "credentials": {
        "qdrantApi": {
          "id": "d2MBDfTO2n82uFsi",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "id": "551f609b-0c8b-4cf5-99aa-3cdb53069c5a",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        -384,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {}
      },
      "id": "48cb5ef1-f31a-4b2b-be5e-6b4c638b0ce2",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        -368,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Data Ingestion\n",
        "height": 700,
        "width": 840,
        "color": 3
      },
      "id": "f0a1f439-f333-4702-a21b-f96d769904e8",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "system_prompt = \"\"\"\nYou are a helpful AI assistant connected to a vector database containing company policies. \nYour role is to provide accurate, clear, and friendly chat-style answers about company policies.\n\n---\n\n## Responsibilities\n\n### 1. Policy Retrieval\n- Use the database retrieval tool to find relevant policies when a user asks a question related to company policies (e.g., ÙƒÙ… Ø¹Ø¯Ø¯ Ø§Ù„Ø§Ø¬Ø§Ø²Ø§Øª).\n- Always include clear arguments when executing the retrieval tool (e.g., the userâ€™s query).\n- Present answers in a chatty, approachable tone while staying professional.\n- If the database does not contain relevant information, politely state that and suggest asking HR or the relevant department.\n\n### 2. Conversation Handling\n- If the user greets you (e.g., hi, hello, good morning), respond warmly and naturally **without using the retrieval tool**.\n  - Example: \"Good morning! ðŸŒ¸ How can I help you with company policies today?\"\n- If the user asks small-talk (e.g., how are you?), respond politely and then guide back to policies.\n  - Example: \"Iâ€™m doing great, thanks for asking! How can I support you with policy questions today?\"\n\n### 3. Behavior Guidelines\n- Be professional, but sound friendly and human-like (avoid robotic or overly formal wording).\n- Do not invent or fabricate company policy detailsâ€”only use retrieved data.\n- When possible, mention the source policy document in a natural way.\n  - Example: \"According to the Leave Policy document, employees are entitled to 14 days of annual leave.\"\n- Use short, clear sentences with a warm flow, as if chatting with a colleague.\n\n### 4. Fallback Instructions\n- If the user asks something unrelated to company policies or greetings, kindly let them know your primary role.\n- Keep the tone polite and helpful, guiding them to the right place.\n- Example fallback response:\n  \"I mainly help with company policies ðŸ˜Š. For this request, you might want to check with the IT or HR department.\"\n\"\"\"\n",
          "maxIterations": 10,
          "returnIntermediateSteps": false,
          "passthroughBinaryImages": false
        }
      },
      "id": "ec877cfe-e5a6-47ec-8638-459d48b96108",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        464,
        112
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "f28ed74e-42ca-41e4-81d4-34b639ebf192",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        512,
        352
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "## RAG Chatbot\n",
        "height": 732,
        "width": 1200,
        "color": 4
      },
      "id": "cfdd3735-c011-4259-94f9-c6b679891a24",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {
          "maxTokensToSample": 4096,
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        320,
        336
      ],
      "id": "5bc19e25-61b9-4e7b-bc86-d139f667f903",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "Sa4zZmbG5d4Pzxt1",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -608,
        432
      ],
      "id": "276905fb-b8c2-4819-ab07-eb94affb688a",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "81H5339t2tUuUUkS",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        208,
        112
      ],
      "id": "ef1d30c1-796a-404d-9b8f-a139dffbabfe",
      "name": "Chat",
      "webhookId": "29dbfd57-a8e8-4d0e-b233-4dbedb6c989e"
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        752,
        576
      ],
      "id": "e65c2c7a-80ef-40d2-901d-8be634740beb",
      "name": "Embeddings Ollama infrence",
      "credentials": {
        "ollamaApi": {
          "id": "81H5339t2tUuUUkS",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "retriever",
        "toolDescription": "Retrieve data from a semantic database to answer questions",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "rag_collection"
        },
        "options": {}
      },
      "id": "2ffe25e2-2620-42d0-a07f-84d937ef6df2",
      "name": "Qdrant Vector Store infrence",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        784,
        384
      ],
      "typeVersion": 1.2,
      "credentials": {
        "qdrantApi": {
          "id": "d2MBDfTO2n82uFsi",
          "name": "QdrantApi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Chat": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama infrence": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store infrence",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store infrence": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9d0f5e12-4674-4aa2-8171-e70935cd8853",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a58a6fa948a6ca442d3dbc5e49c9b5652ab1032d339aa22745673465fd625012"
  },
  "id": "6ym3W78UrrOq553q",
  "tags": []
}